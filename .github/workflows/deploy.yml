name: Deploy Dinner Parties (frontend -> GitHub Pages)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            frontend/package-lock.json
            frontend/npm-shrinkwrap.json

      - name: Normalize dependencies (date-fns + CI-friendly)
        run: |
          # Make npm forgiving for peer conflicts in CI
          npm config set legacy-peer-deps true
          npm config set fund false
          npm config set audit false

          # If date-fns v4 was emitted by a generator, pin to v3 to satisfy react-day-picker
          npm pkg set dependencies.date-fns="^3.6.0" || true

          # Keep ESLint on the CRA-supported major (v8)
          npm pkg set devDependencies.eslint="^8.57.1" || true

          # Ajv/keywords versions that work with react-scripts' webpack toolchain
          npm pkg set devDependencies.ajv="^6.12.6" || true
          npm pkg set devDependencies.ajv-keywords="^3.5.2" || true

      - name: Install dependencies
        run: npm install --no-audit --no-fund

      - name: Build
        env:
          # Ensures CRA builds assets with the right base for a project page
          PUBLIC_URL: "/dinnerpartiesofny-site"
          CI: "false"
        run: |
          if npm run build; then
            echo "Build with npm OK"
          else
            echo "npm build failed; trying yarn if present"
            yarn -v || true
            yarn build || exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/build

  deploy:
    name: deploy
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
